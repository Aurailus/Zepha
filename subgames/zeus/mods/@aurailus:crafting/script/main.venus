_G["crafting"] = {}

crafting.registered_recipes = {}

crafting.register_recipe = fn(tbl) {
    table.insert(crafting.registered_recipes, tbl)
}

crafting.bind = fn(craft_input, craft_output) {
    local width = craft_input.width
    local length = craft_input.length

    local crafting_changed = fn() {
        local items = {}

        local matched_any = false
        foreach r in crafting.registered_recipes {
            local matches = true
            for i = 1, length {
                local x = (i - 1) % width + 1
                local y = math.floor((i - 1) / width) + 1

                local recipe_item_name = ""

                if (y <= #(r.recipe) and x <= #(r.recipe[y])) {
                    recipe_item_name = r.recipe[y][x]
                }

                if (recipe_item_name ~= craft_input:get_stack(i).name) {
                    matches = false
                    break
                }
            }

            if (matches) {
                craft_output:set_stack(1, {r.output, 1})
                matched_any = true
                break
            }
        }

        if (not matched_any) {
            craft_output:set_stack(1, {"invalid", 0})
        }
    }

    craft_input.on_put = crafting_changed
    craft_input.on_take = crafting_changed

    craft_output.allow_put = fn() {
        return 0
    }

    craft_output.on_take = fn() {
        for i = 1, length {
            craft_input:remove_stack(i, 1)
        }
        crafting_changed()
    }
}